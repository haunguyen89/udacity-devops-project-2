Description: UdacityProject2 - HauNCT - Network

Parameters:
  # Add your parameters here
  ProjectName:
    Type: String
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
  PrivateSubnetCidr1:
    Type: String
  PrivateSubnetCidr2:
    Type: String
  PublicSubnetCidr1:
    Type: String
  PublicSubnetCidr2:
    Type: String

Resources:
  ### VPC configurationn ###
  EC2VPCInstance:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: "true"
      EnableDnsSupport: "true"
      Tags: 
        - Key: ProjectName
          Value: !Ref ProjectName

### Private Subnets 1 & 2 ###
  EC2SubnetPrivate1:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref EC2VPCInstance
      CidrBlock: !Ref PrivateSubnetCidr1
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Value: !Sub EC2SubnetPrivate1
          Key: Name

  EC2SubnetPrivate2:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref EC2VPCInstance
      CidrBlock: !Ref PrivateSubnetCidr2
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      Tags:
        - Value: !Sub EC2SubnetPrivate2
          Key: Name

### Public Subnets 1 & 2 ###
  EC2SubnetPublic1:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref EC2VPCInstance
      CidrBlock: !Ref PublicSubnetCidr1
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Value: !Sub EC2SubnetPublic1
          Key: Name

  EC2SubnetPublic2:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref EC2VPCInstance
      CidrBlock: !Ref PublicSubnetCidr2
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      Tags:
        - Value: !Sub EC2SubnetPublic2
          Key: Name

### Internet Gateway & attachment to VPC ###
  EC2InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: EC2VPCInstance
    Properties:
      Tags:
        - Key: "Name"
          Value: !Sub ${ProjectName} InternetGateway

  EC2VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref EC2InternetGateway
      VpcId: !Ref EC2VPCInstance
  
### Nat Gateways for the Private Subnets ###
  NatGatewayEIP1:
    Type: AWS::EC2::EIP
    DependsOn: EC2VPCGatewayAttachment
    Properties:
      Domain: vpc

  NatGatewayEIP2:
    Type: AWS::EC2::EIP
    DependsOn: EC2VPCGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt NatGatewayEIP1.AllocationId
      SubnetId: !Ref EC2SubnetPublic1
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} NatGateway1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt NatGatewayEIP2.AllocationId
      SubnetId: !Ref EC2SubnetPublic2
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} NatGateway2

### Route table for Private subnet 1 ###
  RouteTableInternetAccess:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EC2VPCInstance
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} RouteTableInternetAccess

### Route table for Private subnet 2 ###
  RouteTableLocal:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EC2VPCInstance
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName} RouteTableLocal
  
  RouteGatewayAttachment:
    Type: AWS::EC2::Route
    DependsOn: EC2VPCGatewayAttachment
    Properties:
      GatewayId:
        Ref: EC2InternetGateway
      RouteTableId:
        Ref: RouteTableInternetAccess
      DestinationCidrBlock: "0.0.0.0/0"
  
  RouteAttachedNat:
    Type: AWS::EC2::Route 
    Properties:
      RouteTableId: !Ref RouteTableLocal
      NatGatewayId: !Ref NatGateway1
      DestinationCidrBlock: 0.0.0.0/0

  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableInternetAccess
      SubnetId: !Ref EC2SubnetPublic1

  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableInternetAccess
      SubnetId: !Ref EC2SubnetPublic2 

  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableLocal
      SubnetId: !Ref EC2SubnetPrivate1

  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableLocal
      SubnetId: !Ref EC2SubnetPrivate2

Outputs:
  VpcId:
    Value: !Ref EC2VPCInstance
    Export:
      Name: !Sub ${ProjectName}-VpcId
  PrivateSubnetIds:
    Value: !Join 
      - ","
      - - !Ref EC2SubnetPrivate1
        - !Ref EC2SubnetPrivate2
    Export:
      Name: !Sub ${ProjectName}-PrivateSubnetIds
  PublicSubnetIds:
    Value: !Join 
      - ","
      - - !Ref EC2SubnetPublic1
        - !Ref EC2SubnetPublic2
    Export:
      Name: !Sub ${ProjectName}-PublicSubnetIds
  
  